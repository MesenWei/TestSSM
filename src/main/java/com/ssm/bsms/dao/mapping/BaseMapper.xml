<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ssm.bsms.dao.mapper.BaseMapper" >

    <!-- 多对一 collection  -->
    <!--对于学生来讲，多个课程对应一个学生。多对一也能体现出来，重点是在后面，也就是指的一。同样的一对多，重点在后面也就是多。-->
    <resultMap id="queryForListMap1" type="com.ssm.bsms.dao.po.MyStudent" >
        <id column="id" property="id" jdbcType="VARCHAR" />
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="classid" property="classid" jdbcType="VARCHAR" />
        <result column="yuwen" property="yuwen" jdbcType="DECIMAL" />
        <result column="shuxue" property="shuxue" jdbcType="DECIMAL" />

        <!-- collection用法1 -->
        <collection property="listMyCourse" javaType="java.util.List" ofType="com.ssm.bsms.dao.po.MyCourse">
            <!--这个地方的column绝对不能和一对多当中一的那个column一样，否则映射错误-->
            <id column="mc_id" property="id" jdbcType="VARCHAR" />
            <result column="mc_student_id" jdbcType="VARCHAR" property="studentId" />
            <result column="mc_name" property="name" jdbcType="VARCHAR" />
            <result column="mc_note" property="note" jdbcType="VARCHAR" />
        </collection>

        <!-- collection用法2 -->
        <!--未做测试-->
        <!--<collection property="listMyCourse" javaType="java.util.List" ofType="MyCourse" select="selectByPrimaryKey" />-->

    </resultMap>

    <sql id="My_Student_Column_List" >
        ms.id, ms.name, ms.classid, ms.yuwen, ms.shuxue
    </sql>
    <sql id="My_Course_Column_List" >
        mc.id as mc_id, mc.student_id as mc_student_id, mc.name as mc_name, mc.note as mc_note
    </sql>

    <select id="queryForList" resultMap="queryForListMap1" parameterType="java.lang.String">
        select
        <include refid="My_Student_Column_List" />,
        <include refid="My_Course_Column_List" />
        from my_student ms LEFT JOIN my_course mc ON ms.id = mc.student_id
        WHERE ms.id = #{id,jdbcType=VARCHAR}
    </select>

    <!-- 关联查询方法2 -->

    <!-- 关联查询方法3 -->
</mapper>