<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!-- 加载数据库属性配置文件 -->
    <context:property-placeholder location="classpath:config.properties"/>

    <bean id="writeDataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
        <property name="url" value="${hailstone.db.url}" />
        <property name="username" value="${hailstone.db.user}" />
        <property name="password" value="${hailstone.db.pwd}" />

        <!-- 初始化连接大小 -->
        <property name="initialSize" value="5" />
        <!-- 连接池最大使用连接数量 -->
        <property name="maxActive" value="50" />
        <!-- 连接池最大空闲 -->
        <!-- <property name="maxIdle" value="20" /> -->
        <!-- 连接池最小空闲 -->
        <property name="minIdle" value="5" />
        <!-- 获取连接最大等待时间 -->
        <property name="maxWait" value="60000" />

        <!-- <property name="poolPreparedStatements" value="true" /> <property
            name="maxPoolPreparedStatementPerConnectionSize" value="33" /> -->

        <property name="validationQuery" value="${hailstone.db.validation}" />
        <property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" />
        <property name="testWhileIdle" value="true" />

        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="10000" />
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="25200000" />

        <!-- 打开removeAbandoned功能 -->
        <property name="removeAbandoned" value="true" />
        <!-- 1800秒，也就是30分钟 -->
        <property name="removeAbandonedTimeout" value="1800" />
        <!-- 关闭abanded连接时输出错误日志 -->
        <property name="logAbandoned" value="true" />

        <!-- 监控数据库 -->
        <!-- <property name="filters" value="stat" /> -->
        <property name="filters" value="mergeStat" />
    </bean>

    <bean id="commonClass" class="com.demo.java.aop.springaop.pojo.DemoCommon"/>
    <bean id="aopClass" class="com.demo.java.aop.springaop.pojo.Advice"/>
    <bean id="serviceFacade" class="com.demo.java.springtransaction.ServiceFacade"/>

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name = "dataSource" ref="writeDataSource" />
    </bean>
    <bean id="serviceBook" class="com.demo.java.springtransaction.ServiceBook">
        <property name = "jdbcTemplate" ref="jdbcTemplate" />
    </bean>
    <bean id="serviceUser" class="com.demo.java.springtransaction.ServiceUser">
        <property name = "jdbcTemplate" ref="jdbcTemplate" />
    </bean>

    <!--启用springaop代理-->
    <aop:aspectj-autoproxy proxy-target-class="true"/>

    <aop:config>
        <!--切入点：想要对某些类中方法进行特殊管理（如权限、日志）-->
        <aop:pointcut id="testAdvisor" expression="execution(* com.demo.java.springtransaction.*.*(..))" />
        <!--特殊的advice，规定哪个切入点执行哪些通知-->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="testAdvisor" />
    </aop:config>

    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="writeDataSource"/>
    </bean>

    <tx:advice id="txAdvice" transaction-manager="txManager">
        <tx:attributes>
            <tx:method name="addUser" propagation="REQUIRED"/>
            <tx:method name="addBook" propagation="REQUIRES_NEW"/>
            <!--<tx:method name="addUserBook" propagation="REQUIRES_NEW"/>-->
        </tx:attributes>
    </tx:advice>
</beans>